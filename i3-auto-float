#!/bin/sh

# Author:       Action <dev@action-server.com>
# License:      GNU GPLv3
# Description:  Enable or disable floating for specified windows

# Env
set -e
script_name="$(basename "$0")"
script_ver='v0.1'

print_error(){
	message="$1"
	echo "${script_name} - Error: ${message}" >&2
	notify-send "${script_name}" "Error: ${message}"
}

setup(){
	workdir="$XDG_CONFIG_HOME"/i3

	# Check XDG standard
	if [ -z "$XDG_CONFIG_HOME" ]; then
		workdir="$HOME"/.i3
	fi

	# Check i3-modular-config is installed
	if ! command -v i3-modular-config >/dev/null 2>&1; then
		print_error 'i3-modular-config missing.'
		exit 1
	fi

	mkdir -p "$workdir"/configs
	touch "$workdir"/configs/float.config
}

run(){
	# Get window class and name
	current_window_class="$(xprop WM_CLASS -id "$(xdotool getactivewindow)" | sed -n 's/^WM_CLASS.*"\(.*\)"$/\1/p')"
	current_window_name="$(xprop WM_NAME -id "$(xdotool getactivewindow)" | sed -n 's/^WM_NAME.*"\(.*\)"$/\1/p')"

	# Check window class or name is empty
	if [ -z "$current_window_class" ] || [ -z "$current_window_name" ]; then
		print_error 'Window class or name not found.'
		i3-msg 'floating toggle'
		exit 1
	fi

	current_window_class="class=\"$current_window_class\""
	current_window_name="title=\"$current_window_name\""

	# Toggle float
	if ! grep -q -i "${current_window_class}.*${current_window_name}" "$workdir"/configs/float.config; then
		printf '%s\n' "for_window [$current_window_class $current_window_name] floating enable" >> "$workdir"/configs/float.config
	else
		sed -i.bak '/^.*'"$current_window_class"'.*'"$current_window_name"'.*$/d' "$workdir"/configs/float.config
	fi

	# Reload i3 and notify user
	i3-modular-config && i3-msg 'reload'
	i3-msg 'floating toggle'
}

main(){
	setup
	run
}

main "$@"
